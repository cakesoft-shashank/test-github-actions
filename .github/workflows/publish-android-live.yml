name: Create Draft Release and Upload APK

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Create Draft Release and Upload APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Extract Version from package.json
        id: package_version
        run: echo "VERSION=$(jq -r '.version' package.json)" >> $GITHUB_ENV

      - name: Create GitHub Release (if not exists)
        id: create_release
        run: |
          TAG="v${{ env.VERSION }}"
          RELEASE_RESPONSE=$(gh release view $TAG --json id --jq '.id' || echo "not_found")
          if [[ "$RELEASE_RESPONSE" == "not_found" ]]; then
            gh release create "$TAG" --draft --title "Release $TAG" --notes "Automated draft release" || echo "Release creation failed"
          else
            echo "Release already exists."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup JDK for Android Build
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Setup Gradle Cache
        uses: gradle/gradle-build-action@v3

      - name: Install Dependencies
        run: yarn install --frozen-lockfile

      - name: Build APK
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Upload APK to Draft Release
        run: |
          TAG="v${{ env.VERSION }}"
          APK_PATH=$(find android/app/build/outputs/apk/release -name "*.apk" | head -n 1)
          if [[ -f "$APK_PATH" ]]; then
            gh release upload "$TAG" "$APK_PATH" --clobber
          else
            echo "APK not found!"
            exit 1
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
